/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  CounterERC2771,
  CounterERC2771Interface,
} from "../../../../contracts/contracts/Counter.sol/CounterERC2771";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "trustedForwarder",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_msgSender",
        type: "address",
      },
    ],
    name: "IncrementCounter",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "contextCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "increment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "forwarder",
        type: "address",
      },
    ],
    name: "isTrustedForwarder",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b506040516104cf3803806104cf833981810160405281019061003291906100d1565b808073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505050506100fe565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061009e82610073565b9050919050565b6100ae81610093565b81146100b957600080fd5b50565b6000815190506100cb816100a5565b92915050565b6000602082840312156100e7576100e661006e565b5b60006100f5848285016100bc565b91505092915050565b6080516103b7610118600039600060b401526103b76000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063572b6c051461004657806382b7616814610076578063d09de08a146100a6575b600080fd5b610060600480360381019061005b9190610249565b6100b0565b60405161006d9190610291565b60405180910390f35b610090600480360381019061008b9190610249565b610108565b60405161009d91906102c5565b60405180910390f35b6100ae610120565b005b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b60006020528060005260406000206000915090505481565b60008061012b6101bb565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906101769061030f565b91905055507fb919ce44b7a69540a28d9b539349b0b525af0e18a935318fa1000b8840c708886101a46101bb565b6040516101b19190610366565b60405180910390a1565b60006101c6336100b0565b156101da57601436033560601c90506101e2565b3390506101e3565b5b90565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610216826101eb565b9050919050565b6102268161020b565b811461023157600080fd5b50565b6000813590506102438161021d565b92915050565b60006020828403121561025f5761025e6101e6565b5b600061026d84828501610234565b91505092915050565b60008115159050919050565b61028b81610276565b82525050565b60006020820190506102a66000830184610282565b92915050565b6000819050919050565b6102bf816102ac565b82525050565b60006020820190506102da60008301846102b6565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061031a826102ac565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361034c5761034b6102e0565b5b600182019050919050565b6103608161020b565b82525050565b600060208201905061037b6000830184610357565b9291505056fea264697066735822122034229a2a656772d8c5bf47eb3137be6c90f888379bc69e826e7852cf75b558d964736f6c63430008180033";

type CounterERC2771ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CounterERC2771ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CounterERC2771__factory extends ContractFactory {
  constructor(...args: CounterERC2771ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    trustedForwarder: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(trustedForwarder, overrides || {});
  }
  override deploy(
    trustedForwarder: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(trustedForwarder, overrides || {}) as Promise<
      CounterERC2771 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): CounterERC2771__factory {
    return super.connect(runner) as CounterERC2771__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CounterERC2771Interface {
    return new Interface(_abi) as CounterERC2771Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): CounterERC2771 {
    return new Contract(address, _abi, runner) as unknown as CounterERC2771;
  }
}
